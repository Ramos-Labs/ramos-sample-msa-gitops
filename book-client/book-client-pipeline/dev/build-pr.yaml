apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    argocd.argoproj.io/sync-options: Prune=false
  labels:
    app: book-client
    env: dev
    type: build
  name: book-client-dev-build-pr
  namespace: inje-msa-demo-cicd
spec:
  params:
  - name: git-host-url
    value: https://gitea.cone-chain.com
  - name: code-repo-org
    value: inje-msa-demo
  - name: code-repo-name
    value: book-client
  - name: code-repo-url
    value: $(params.git-host-url)/$(params.code-repo-org)/$(params.code-repo-name).git
  - name: code-revision
    value: develop
  - name: node-version
    value: "21.1.0"
  - name: pnpm-version
    value: "8.15.6"
  - name: nginx-version
    value: "1.26"
  - name: build-script
    value: |
      pnpm install --no-frozen-lockfile --reporter=ndjson
      pnpm run build:dev
  - name: artifact-source
    value: dist
  - name: artifact-target
    value: /usr/share/nginx/html
  - name: skip-code-analysis
    value: "false"
  - name: skip-write-dockerfile
    value: "false"
  - name: skip-image-scan
    value: "false"
  - name: skip-deploy-trigger
    value: "false"
  - name: app-env
    value: dev
  - name: app-namespace
    value: inje-msa-demo-dev
  - name: app-name
    value: $(params.code-repo-name)
  - name: app-image
    value: harbor.cone-chain.com/$(params.app-namespace)/$(params.code-repo-org)/$(params.app-name)
  - name: gitops-repo-org
    value: $(params.code-repo-org)-cicd
  - name: gitops-repo-name
    value: $(params.code-repo-name)-gitops
  - name: gitops-repo-url
    value: $(params.git-host-url)/$(params.gitops-repo-org)/$(params.gitops-repo-name).git
  - name: cicd-repo-org
    value: $(params.code-repo-org)-cicd
  - name: cicd-repo-name
    value: $(params.code-repo-name)-$(params.app-env)
  - name: cicd-repo-url
    value: $(params.git-host-url)/$(params.cicd-repo-org)/$(params.cicd-repo-name).git
  - name: deploy-el-name
    value: $(params.code-repo-name)-$(params.app-env)-deploy-el
  # - name: use-lock
  #   value: "true"
  pipelineRef:
    params:
    - name: kind
      value: pipeline
    - name: name
      value: build-pnpm-nodejs-nginx-image
    - name: namespace
      value: tekton-catalog
    resolver: cluster
  status: PipelineRunPending
  taskRunTemplate:
    serviceAccountName: cicdbot
  timeouts:
    pipeline: 1h0m0s
  workspaces:
  # - name: shared-lock
  #   persistentVolumeClaim:
  #     claimName: cicdvol-shared-local-pvc
  #   subPath: .shared-lock
  - name: shared-data
    persistentVolumeClaim:
      claimName: cicdvol-shared-local-pvc
    subPath: $(params.code-repo-name)
  - name: gitconfig
    secret:
      secretName: cicdbot-gitconfig-secret
  - name: ssl-ca-directory
    secret:
      secretName: cicdssl-cacerts-secret
  - name: npmrc-settings
    secret:
      secretName: cicdbot-nexus-secret
  - name: npm-local-cache
    persistentVolumeClaim:
      claimName: cicdvol-shared-local-pvc
    subPath: .npm-local-cache
  - name: pnpm-local-repo
    emptyDir: {}
  - name: node_modules
    persistentVolumeClaim:
      claimName: cicdvol-shared-local-pvc
    subPath: .project/$(params.code-repo-name)/node_modules
  - name: sonar-credentials
    secret:
      secretName: cicdbot-sonarqube-secret
  - name: dockerconfig
    secret:
      secretName: cicdbot-dockerconfig-secret
  - name: trivy-local-cache
    persistentVolumeClaim:
      claimName: cicdvol-shared-local-pvc
    subPath: .trivy-local-cache
  - name: kubeconfig
    secret:
      secretName: cicdbot-kubeconfig-secret